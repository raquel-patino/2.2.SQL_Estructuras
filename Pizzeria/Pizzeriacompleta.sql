-- MySQL Script generated by MySQL Workbench
-- Wed Jan 15 11:13:05 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema pizzeria
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `pizzeria` ;

-- -----------------------------------------------------
-- Schema pizzeria
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `pizzeria` DEFAULT CHARACTER SET utf8 ;
USE `pizzeria` ;

-- -----------------------------------------------------
-- Table `pizzeria`.`Direccion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzeria`.`Direccion` ;

CREATE TABLE IF NOT EXISTS `pizzeria`.`Direccion` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `tipo_calle` VARCHAR(45) NULL,
  `nombre` VARCHAR(45) NULL,
  `numero` INT NULL,
  `piso` INT NULL,
  `codigo_postal` VARCHAR(45) NULL,
  `localidad` VARCHAR(45) NULL,
  `provincia` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`Cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzeria`.`Cliente` ;

CREATE TABLE IF NOT EXISTS `pizzeria`.`Cliente` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido1` VARCHAR(45) NOT NULL,
  `apellido2` VARCHAR(45) NULL,
  `id_direccion` INT NOT NULL,
  `telefono` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_cliente_direccion_idx` (`id_direccion` ASC),
  CONSTRAINT `fk_cliete_direccion`
    FOREIGN KEY (`id_direccion`)
    REFERENCES `pizzeria`.`Direccion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`Categoria`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzeria`.`Categoria` ;

CREATE TABLE IF NOT EXISTS `pizzeria`.`Categoria` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`Producto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzeria`.`Producto` ;

CREATE TABLE IF NOT EXISTS `pizzeria`.`Producto` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `descripcion` VARCHAR(100) NULL,
  `tipo` VARCHAR(45) NULL,
  `imagen` VARCHAR(45) NULL,
  `precio` DECIMAL(8,2) NULL,
  `id_categoria` INT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_id_categoria_idx` (`id_categoria` ASC),
  CONSTRAINT `fk_id_categoria`
    FOREIGN KEY (`id_categoria`)
    REFERENCES `pizzeria`.`Categoria` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`Tienda`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzeria`.`Tienda` ;

CREATE TABLE IF NOT EXISTS `pizzeria`.`Tienda` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_direccion` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC) ,
  INDEX `fk_id_tienda_direccion_idx` (`id_direccion` ASC),
  CONSTRAINT `fk_id_tienda_direccion`
    FOREIGN KEY (`id_direccion`)
    REFERENCES `pizzeria`.`Direccion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`Empleado`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzeria`.`Empleado` ;

CREATE TABLE IF NOT EXISTS `pizzeria`.`Empleado` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_tienda` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  `apellido1` VARCHAR(45) NOT NULL,
  `apellido2` VARCHAR(45) NULL,
  `NIF` VARCHAR(45) NOT NULL,
  `telefono` INT NOT NULL,
  `puesto` ENUM('cocinero', 'repartidor') NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_id_tienda_idx` (`id_tienda` ASC),
  CONSTRAINT `fk_id_tienda`
    FOREIGN KEY (`id_tienda`)
    REFERENCES `pizzeria`.`Tienda` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`Pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzeria`.`Pedido` ;

CREATE TABLE IF NOT EXISTS `pizzeria`.`Pedido` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `id_cliente` INT NULL,
  `fecha` DATETIME NULL,
  `tipo_pedido` VARCHAR(45) NULL,
  `precio_total` DECIMAL(10,2) DEFAULT 0,
  `id_tienda` INT NOT NULL,
  `id_empleado` INT NULL,
  `fecha_entrega` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_id_tienda_idx` (`id_tienda` ASC),
  INDEX `fk_id_empleado_idx` (`id_empleado` ASC),
  CONSTRAINT `fk_id_pedido_tienda`
    FOREIGN KEY (`id_tienda`)
    REFERENCES `pizzeria`.`Tienda` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_id_empleado`
    FOREIGN KEY (`id_empleado`)
    REFERENCES `pizzeria`.`Empleado` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `pizzeria`.`Comanda_producto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `pizzeria`.`Comanda_producto` ;

CREATE TABLE IF NOT EXISTS `pizzeria`.`Comanda_producto` (
  `id_producto` INT NOT NULL,
  `id_pedido` INT NOT NULL,
  `cantidad` INT NULL,
  INDEX `fk_id_producto_idx` (`id_producto` ASC) ,
  INDEX `fk_id_comanda_idx` (`id_pedido` ASC),
  CONSTRAINT `fk_id_producto`
    FOREIGN KEY (`id_producto`)
    REFERENCES `pizzeria`.`Producto` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_id_pedido`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `pizzeria`.`Pedido` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `pizzeria`;

DELIMITER $$

USE `pizzeria`$$
DROP TRIGGER IF EXISTS `pizzeria`.`Comanda_producto_AFTER_INSERT` $$
USE `pizzeria`$$
CREATE DEFINER = CURRENT_USER TRIGGER 
`pizzeria`.`Comanda_producto_AFTER_INSERT` AFTER INSERT ON 
`Comanda_producto` FOR EACH ROW
BEGIN
UPDATE Pedido
SET precio_total =(
SELECT SUM(co.cantidad * pr.precio) 
FROM comanda_producto co 
JOIN producto pr ON co.id_producto=pr.id
WHERE co.id_pedido= NEW.id_pedido
)
WHERE id=NEW.id_pedido;
END$$


DELIMITER ;

-- DATOS DIRECCIONES
 INSERT INTO Direccion VALUES (1, 'Carrer', 'Elmo', 2, 3, '09754', 'Barcelona', 'Barcelona');
  INSERT INTO Direccion VALUES (2, 'Via', 'Guadalquivir', 56, 3, '54689','Mocejón', 'Toledo');
  INSERT INTO Direccion VALUES (3, 'Calle', 'Segura', 34, 5, '45678', 'Tarrasa', 'Barcelona');
  INSERT INTO Direccion VALUES (4, 'Calle', 'de Viena', 98, 2, '08845', 'Rubí', 'Barcelona');
  INSERT INTO Direccion VALUES (5, 'Passeig', ' de Sant Joan', 125, 4, '08904', 'Barcelona', 'Barcelona');
  INSERT INTO Direccion VALUES (6, 'Calle', ' de la Independencia', 34, 5, '78543', 'Barcelona', 'Barcelona');
  INSERT INTO Direccion VALUES (7, 'Calle', 'Rosa Parks', 34, 3, '74563', 'Girona', 'Girona');
  INSERT INTO Direccion VALUES (8, 'Via', 'Chandler Bing', 67, 8,'89937', 'Barcelona', 'Barcelona');
  
-- datos clientes
INSERT INTO Cliente VALUES (1, 'Alberto', 'Sanchez', 'Perez', 1, 612345678);
  INSERT INTO Cliente VALUES (2, 'Juana', 'Delgado', 'Garcia', 3, 64523498);
  INSERT INTO Cliente VALUES (3, 'Adolfo', 'Peña', 'Jimenez', 6, 645974367); 
  INSERT INTO Cliente VALUES (4, 'Daniela', 'Barroso', 'Galan', 2, 645901030);

-- datos productos

  INSERT INTO Producto VALUES (1, 'Pizza Margarita', 'Pizza con base de tomate y queso mozzarella', 'pizza','/imagenes/pizza_margarita.jpg', 10.50, 1);
  INSERT INTO Producto VALUES (2, 'Hamburguesa queso de cabra', ' Hamburguesa de carne de vacuno con queso de cabra', 'hamburguesa', '/imagenes/hamburguesa_cabra.jpg', 12.50, NULL);
  INSERT INTO Producto VALUES (3, 'Fanta de naranja', 'Bebida de naranja', 'bebida', '/imagenes/fanta_naranja.jpg', 2.50, NULL);
  INSERT INTO Producto VALUES (4, 'Pizza 4 quesos', 'Pizza con queso de cabra, mozzarella, roquefort, straciatella', 'pizza', '/imagenes/pizza_4quesos.jpg', 12.50, 1);
  INSERT INTO Producto VALUES (5, 'Hamburguesa huevo y bacon', 'Hamburguesa de carne de vacuno con huevo y bacon', 'hamburguesa', '/imagenes/hamburguesa_huevo_bacon.jpg', 13, NULL);
  INSERT INTO Producto VALUES (6, 'Pizza Mortadela', 'Pizza con base blanca, mortadela y pistachos', 'pizza', '/imagenes/pizza_mortadela.jpg', 12.99, 2);
  INSERT INTO Producto VALUES (7, 'Coca-cola zero', 'Bebida sin azucares', 'bebida', '/imagenes/coca_cola_zero.jpg', 2, NULL);
  INSERT INTO Producto VALUES (8, 'Pizza j&q', 'Pizza con jamon y queso', 'pizza', '/imagenes/jym.jpg', 13, 2);

-- datos tienda
  INSERT INTO Tienda VALUES (1, 4);
  INSERT INTO Tienda VALUES (2, 7);
  
  -- datos empleado
INSERT INTO Empleado VALUES 
(1, 1, 'Juan', 'Sanchez', 'Gonzalez', '0677849H', 65789421, 'cocinero'),
(2, 1, 'Juan', 'Pérez', 'García', '12345678A', 600123456, 'cocinero'),
(3, 1, 'María', 'López', 'Martínez', '23456789B', 600654321, 'repartidor'),
(4, 2, 'Carlos', 'Gómez', NULL, '34567890C', 600789456, 'cocinero'),
(5, 2, 'Ana', 'Rodríguez', 'Santos', '45678901D', 600987123, 'repartidor'),
(6, 2, 'Luis', 'Martínez', 'Hernández', '56789012E', 600321654, 'cocinero');

-- datos pedidos
INSERT INTO Pedido VALUES
(1, 2, '2024-12-02 16:25:00', 'domicilio',0, 2, 5, '2024-12-02 17:00:00'),
(2, 4,'2024-12-02 14:00:00', 'tienda', 1, 0, NULL,'2024-12-02 14:30:00' ),
(3, 2, '2024-12-13 13:25:00', 'domicilio',0, 2, 5,'2024-12-13 14:30:00');

-- datos comanda
INSERT INTO Comanda_producto VALUES
(2, 1, 2),
(3, 1, 1),
(4,1, 1),
(1, 2, 4),
(3, 2, 4),
(6, 3, 1),
(7, 3, 2);

-- categorias

INSERT INTO Categoria VALUES
(1, 'Pizzas vegetarianas'),
(2, 'Pizzas con carne');

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
